THREE={},THREE.Math={clamp:function(E,n,t){return E>t?t:E<n?n:E}};
THREE.Vector3=function(t,i,s){this.x=t||0,this.y=i||0,this.z=s||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(t,i,s){return this.x=t,this.y=i,this.z=s,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,i){switch(t){case 0:this.x=i;break;case 1:this.y=i;break;case 2:this.z=i;break;default:throw new Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,i){return void 0!==i?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,i)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,i){return this.x=t.x+i.x,this.y=t.y+i.y,this.z=t.z+i.z,this},addScaledVector:function(t,i){return this.x+=t.x*i,this.y+=t.y*i,this.z+=t.z*i,this},sub:function(t,i){return void 0!==i?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,i)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,i){return this.x=t.x-i.x,this.y=t.y-i.y,this.z=t.z-i.z,this},multiply:function(t,i){return void 0!==i?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,i)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return isFinite(t)?(this.x*=t,this.y*=t,this.z*=t):(this.x=0,this.y=0,this.z=0),this},multiplyVectors:function(t,i){return this.x=t.x*i.x,this.y=t.y*i.y,this.z=t.z*i.z,this},applyEuler:function(){var t;return function(i){return i instanceof THREE.Euler==!1&&console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),void 0===t&&(t=new THREE.Quaternion),this.applyQuaternion(t.setFromEuler(i))}}(),applyAxisAngle:function(){var t;return function(i,s){return void 0===t&&(t=new THREE.Quaternion),this.applyQuaternion(t.setFromAxisAngle(i,s))}}(),applyMatrix3:function(t){var i=this.x,s=this.y,n=this.z,r=t.elements;return this.x=r[0]*i+r[3]*s+r[6]*n,this.y=r[1]*i+r[4]*s+r[7]*n,this.z=r[2]*i+r[5]*s+r[8]*n,this},applyMatrix4:function(t){var i=this.x,s=this.y,n=this.z,r=t.elements;return this.x=r[0]*i+r[4]*s+r[8]*n+r[12],this.y=r[1]*i+r[5]*s+r[9]*n+r[13],this.z=r[2]*i+r[6]*s+r[10]*n+r[14],this},applyProjection:function(t){var i=this.x,s=this.y,n=this.z,r=t.elements,h=1/(r[3]*i+r[7]*s+r[11]*n+r[15]);return this.x=(r[0]*i+r[4]*s+r[8]*n+r[12])*h,this.y=(r[1]*i+r[5]*s+r[9]*n+r[13])*h,this.z=(r[2]*i+r[6]*s+r[10]*n+r[14])*h,this},applyQuaternion:function(t){var i=this.x,s=this.y,n=this.z,r=t.x,h=t.y,e=t.z,o=t.w,a=o*i+h*n-e*s,u=o*s+e*i-r*n,c=o*n+r*s-h*i,y=-r*i-h*s-e*n;return this.x=a*o+y*-r+u*-e-c*-h,this.y=u*o+y*-h+c*-r-a*-e,this.z=c*o+y*-e+a*-h-u*-r,this},project:function(){var t;return function(i){return void 0===t&&(t=new THREE.Matrix4),t.multiplyMatrices(i.projectionMatrix,t.getInverse(i.matrixWorld)),this.applyProjection(t)}}(),unproject:function(){var t;return function(i){return void 0===t&&(t=new THREE.Matrix4),t.multiplyMatrices(i.matrixWorld,t.getInverse(i.projectionMatrix)),this.applyProjection(t)}}(),transformDirection:function(t){var i=this.x,s=this.y,n=this.z,r=t.elements;return this.x=r[0]*i+r[4]*s+r[8]*n,this.y=r[1]*i+r[5]*s+r[9]*n,this.z=r[2]*i+r[6]*s+r[10]*n,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,i){return this.x=Math.max(t.x,Math.min(i.x,this.x)),this.y=Math.max(t.y,Math.min(i.y,this.y)),this.z=Math.max(t.z,Math.min(i.z,this.z)),this},clampScalar:function(){var t,i;return function(s,n){return void 0===t&&(t=new THREE.Vector3,i=new THREE.Vector3),t.set(s,s,s),i.set(n,n,n),this.clamp(t,i)}}(),clampLength:function(t,i){var s=this.length();return this.multiplyScalar(Math.max(t,Math.min(i,s))/s)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){return this.multiplyScalar(t/this.length())},lerp:function(t,i){return this.x+=(t.x-this.x)*i,this.y+=(t.y-this.y)*i,this.z+=(t.z-this.z)*i,this},lerpVectors:function(t,i,s){return this.subVectors(i,t).multiplyScalar(s).add(t)},cross:function(t,i){if(void 0!==i)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,i);var s=this.x,n=this.y,r=this.z;return this.x=n*t.z-r*t.y,this.y=r*t.x-s*t.z,this.z=s*t.y-n*t.x,this},crossVectors:function(t,i){var s=t.x,n=t.y,r=t.z,h=i.x,e=i.y,o=i.z;return this.x=n*o-r*e,this.y=r*h-s*o,this.z=s*e-n*h,this},projectOnVector:function(t){var i=t.dot(this)/t.lengthSq();return this.copy(t).multiplyScalar(i)},projectOnPlane:function(){var t;return function(i){return void 0===t&&(t=new THREE.Vector3),t.copy(this).projectOnVector(i),this.sub(t)}}(),reflect:function(){var t;return function(i){return void 0===t&&(t=new THREE.Vector3),this.sub(t.copy(i).multiplyScalar(2*this.dot(i)))}}(),angleTo:function(t){var i=this.dot(t)/Math.sqrt(this.lengthSq()*t.lengthSq());return Math.acos(THREE.Math.clamp(i,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var i=this.x-t.x,s=this.y-t.y,n=this.z-t.z;return i*i+s*s+n*n},distanceToManhattan:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){var i=Math.sin(t.phi)*t.radius;return this.x=i*Math.sin(t.theta),this.y=Math.cos(t.phi)*t.radius,this.z=i*Math.cos(t.theta),this},setFromMatrixPosition:function(t){return this.setFromMatrixColumn(t,3)},setFromMatrixScale:function(t){var i=this.setFromMatrixColumn(t,0).length(),s=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=i,this.y=s,this.z=n,this},setFromMatrixColumn:function(t,i){if("number"==typeof t){console.warn("THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).");var s=t;t=i,i=s}return this.fromArray(t.elements,4*i)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,i){return void 0===i&&(i=0),this.x=t[i],this.y=t[i+1],this.z=t[i+2],this},toArray:function(t,i){return void 0===t&&(t=[]),void 0===i&&(i=0),t[i]=this.x,t[i+1]=this.y,t[i+2]=this.z,t},fromAttribute:function(t,i,s){return void 0===s&&(s=0),i=i*t.itemSize+s,this.x=t.array[i],this.y=t.array[i+1],this.z=t.array[i+2],this}};
THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(t,e,r,n,i,s,o,a,u,l,h,c,m,f,v,y){var E=this.elements;return E[0]=t,E[4]=e,E[8]=r,E[12]=n,E[1]=i,E[5]=s,E[9]=o,E[13]=a,E[2]=u,E[6]=l,E[10]=h,E[14]=c,E[3]=m,E[7]=f,E[11]=v,E[15]=y,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)},copy:function(t){return this.elements.set(t.elements),this},copyPosition:function(t){var e=this.elements,r=t.elements;return e[12]=r[12],e[13]=r[13],e[14]=r[14],this},extractBasis:function(t,e,r){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,r){return this.set(t.x,e.x,r.x,0,t.y,e.y,r.y,0,t.z,e.z,r.z,0,0,0,0,1),this},extractRotation:function(){var t;return function(e){void 0===t&&(t=new THREE.Vector3);var r=this.elements,n=e.elements,i=1/t.setFromMatrixColumn(e,0).length(),s=1/t.setFromMatrixColumn(e,1).length(),o=1/t.setFromMatrixColumn(e,2).length();return r[0]=n[0]*i,r[1]=n[1]*i,r[2]=n[2]*i,r[4]=n[4]*s,r[5]=n[5]*s,r[6]=n[6]*s,r[8]=n[8]*o,r[9]=n[9]*o,r[10]=n[10]*o,this}}(),makeRotationFromEuler:function(t){t instanceof THREE.Euler==!1&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,r=t.x,n=t.y,i=t.z,s=Math.cos(r),o=Math.sin(r),a=Math.cos(n),u=Math.sin(n),l=Math.cos(i),h=Math.sin(i);if("XYZ"===t.order){var c=s*l,m=s*h,f=o*l,v=o*h;e[0]=a*l,e[4]=-a*h,e[8]=u,e[1]=m+f*u,e[5]=c-v*u,e[9]=-o*a,e[2]=v-c*u,e[6]=f+m*u,e[10]=s*a}else if("YXZ"===t.order){var y=a*l,E=a*h,M=u*l,x=u*h;e[0]=y+x*o,e[4]=M*o-E,e[8]=s*u,e[1]=s*h,e[5]=s*l,e[9]=-o,e[2]=E*o-M,e[6]=x+y*o,e[10]=s*a}else if("ZXY"===t.order){var y=a*l,E=a*h,M=u*l,x=u*h;e[0]=y-x*o,e[4]=-s*h,e[8]=M+E*o,e[1]=E+M*o,e[5]=s*l,e[9]=x-y*o,e[2]=-s*u,e[6]=o,e[10]=s*a}else if("ZYX"===t.order){var c=s*l,m=s*h,f=o*l,v=o*h;e[0]=a*l,e[4]=f*u-m,e[8]=c*u+v,e[1]=a*h,e[5]=v*u+c,e[9]=m*u-f,e[2]=-u,e[6]=o*a,e[10]=s*a}else if("YZX"===t.order){var d=s*a,p=s*u,R=o*a,T=o*u;e[0]=a*l,e[4]=T-d*h,e[8]=R*h+p,e[1]=h,e[5]=s*l,e[9]=-o*l,e[2]=-u*l,e[6]=p*h+R,e[10]=d-T*h}else if("XZY"===t.order){var d=s*a,p=s*u,R=o*a,T=o*u;e[0]=a*l,e[4]=-h,e[8]=u*l,e[1]=d*h+T,e[5]=s*l,e[9]=p*h-R,e[2]=R*h-p,e[6]=o*l,e[10]=T*h+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(t){var e=this.elements,r=t.x,n=t.y,i=t.z,s=t.w,o=r+r,a=n+n,u=i+i,l=r*o,h=r*a,c=r*u,m=n*a,f=n*u,v=i*u,y=s*o,E=s*a,M=s*u;return e[0]=1-(m+v),e[4]=h-M,e[8]=c+E,e[1]=h+M,e[5]=1-(l+v),e[9]=f-y,e[2]=c-E,e[6]=f+y,e[10]=1-(l+m),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAt:function(){var t,e,r;return function(n,i,s){void 0===t&&(t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3);var o=this.elements;return r.subVectors(n,i).normalize(),0===r.lengthSq()&&(r.z=1),t.crossVectors(s,r).normalize(),0===t.lengthSq()&&(r.z+=1e-4,t.crossVectors(s,r).normalize()),e.crossVectors(r,t),o[0]=t.x,o[4]=e.x,o[8]=r.x,o[1]=t.y,o[5]=e.y,o[9]=r.y,o[2]=t.z,o[6]=e.z,o[10]=r.z,this}}(),multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var r=t.elements,n=e.elements,i=this.elements,s=r[0],o=r[4],a=r[8],u=r[12],l=r[1],h=r[5],c=r[9],m=r[13],f=r[2],v=r[6],y=r[10],E=r[14],M=r[3],x=r[7],d=r[11],p=r[15],R=n[0],T=n[4],g=n[8],z=n[12],H=n[1],w=n[5],k=n[9],A=n[13],F=n[2],V=n[6],X=n[10],Y=n[14],Z=n[3],C=n[7],P=n[11],S=n[15];return i[0]=s*R+o*H+a*F+u*Z,i[4]=s*T+o*w+a*V+u*C,i[8]=s*g+o*k+a*X+u*P,i[12]=s*z+o*A+a*Y+u*S,i[1]=l*R+h*H+c*F+m*Z,i[5]=l*T+h*w+c*V+m*C,i[9]=l*g+h*k+c*X+m*P,i[13]=l*z+h*A+c*Y+m*S,i[2]=f*R+v*H+y*F+E*Z,i[6]=f*T+v*w+y*V+E*C,i[10]=f*g+v*k+y*X+E*P,i[14]=f*z+v*A+y*Y+E*S,i[3]=M*R+x*H+d*F+p*Z,i[7]=M*T+x*w+d*V+p*C,i[11]=M*g+x*k+d*X+p*P,i[15]=M*z+x*A+d*Y+p*S,this},multiplyToArray:function(t,e,r){var n=this.elements;return this.multiplyMatrices(t,e),r[0]=n[0],r[1]=n[1],r[2]=n[2],r[3]=n[3],r[4]=n[4],r[5]=n[5],r[6]=n[6],r[7]=n[7],r[8]=n[8],r[9]=n[9],r[10]=n[10],r[11]=n[11],r[12]=n[12],r[13]=n[13],r[14]=n[14],r[15]=n[15],this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},applyToVector3Array:function(){var t;return function(e,r,n){void 0===t&&(t=new THREE.Vector3),void 0===r&&(r=0),void 0===n&&(n=e.length);for(var i=0,s=r;i<n;i+=3,s+=3)t.fromArray(e,s),t.applyMatrix4(this),t.toArray(e,s);return e}}(),applyToBuffer:function(){var t;return function(e,r,n){void 0===t&&(t=new THREE.Vector3),void 0===r&&(r=0),void 0===n&&(n=e.length/e.itemSize);for(var i=0,s=r;i<n;i++,s++)t.x=e.getX(s),t.y=e.getY(s),t.z=e.getZ(s),t.applyMatrix4(this),e.setXYZ(t.x,t.y,t.z);return e}}(),determinant:function(){var t=this.elements,e=t[0],r=t[4],n=t[8],i=t[12],s=t[1],o=t[5],a=t[9],u=t[13],l=t[2],h=t[6],c=t[10],m=t[14],f=t[3],v=t[7],y=t[11],E=t[15];return f*(+i*a*h-n*u*h-i*o*c+r*u*c+n*o*m-r*a*m)+v*(+e*a*m-e*u*c+i*s*c-n*s*m+n*u*l-i*a*l)+y*(+e*u*h-e*o*m-i*s*h+r*s*m+i*o*l-r*u*l)+E*(-n*o*l-e*a*h+e*o*c+n*s*h-r*s*c+r*a*l)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead."),this.toArray(t,e)},getPosition:function(){var t;return function(){return void 0===t&&(t=new THREE.Vector3),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),t.setFromMatrixColumn(this,3)}}(),setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var r=this.elements,n=t.elements,i=n[0],s=n[1],o=n[2],a=n[3],u=n[4],l=n[5],h=n[6],c=n[7],m=n[8],f=n[9],v=n[10],y=n[11],E=n[12],M=n[13],x=n[14],d=n[15],p=f*x*c-M*v*c+M*h*y-l*x*y-f*h*d+l*v*d,R=E*v*c-m*x*c-E*h*y+u*x*y+m*h*d-u*v*d,T=m*M*c-E*f*c+E*l*y-u*M*y-m*l*d+u*f*d,g=E*f*h-m*M*h-E*l*v+u*M*v+m*l*x-u*f*x,z=i*p+s*R+o*T+a*g;if(0===z){var H="THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";if(e)throw new Error(H);return console.warn(H),this.identity()}var w=1/z;return r[0]=p*w,r[1]=(M*v*a-f*x*a-M*o*y+s*x*y+f*o*d-s*v*d)*w,r[2]=(l*x*a-M*h*a+M*o*c-s*x*c-l*o*d+s*h*d)*w,r[3]=(f*h*a-l*v*a-f*o*c+s*v*c+l*o*y-s*h*y)*w,r[4]=R*w,r[5]=(m*x*a-E*v*a+E*o*y-i*x*y-m*o*d+i*v*d)*w,r[6]=(E*h*a-u*x*a-E*o*c+i*x*c+u*o*d-i*h*d)*w,r[7]=(u*v*a-m*h*a+m*o*c-i*v*c-u*o*y+i*h*y)*w,r[8]=T*w,r[9]=(E*f*a-m*M*a-E*s*y+i*M*y+m*s*d-i*f*d)*w,r[10]=(u*M*a-E*l*a+E*s*c-i*M*c-u*s*d+i*l*d)*w,r[11]=(m*l*a-u*f*a-m*s*c+i*f*c+u*s*y-i*l*y)*w,r[12]=g*w,r[13]=(m*M*o-E*f*o+E*s*v-i*M*v-m*s*x+i*f*x)*w,r[14]=(E*l*o-u*M*o-E*s*h+i*M*h+u*s*x-i*l*x)*w,r[15]=(u*f*o-m*l*o+m*s*h-i*f*h-u*s*v+i*l*v)*w,this},scale:function(t){var e=this.elements,r=t.x,n=t.y,i=t.z;return e[0]*=r,e[4]*=n,e[8]*=i,e[1]*=r,e[5]*=n,e[9]*=i,e[2]*=r,e[6]*=n,e[10]*=i,e[3]*=r,e[7]*=n,e[11]*=i,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],r=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,r,n))},makeTranslation:function(t,e,r){return this.set(1,0,0,t,0,1,0,e,0,0,1,r,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),r=Math.sin(t);return this.set(1,0,0,0,0,e,-r,0,0,r,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),r=Math.sin(t);return this.set(e,0,r,0,0,1,0,0,-r,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),r=Math.sin(t);return this.set(e,-r,0,0,r,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var r=Math.cos(e),n=Math.sin(e),i=1-r,s=t.x,o=t.y,a=t.z,u=i*s,l=i*o;return this.set(u*s+r,u*o-n*a,u*a+n*o,0,u*o+n*a,l*o+r,l*a-n*s,0,u*a-n*o,l*a+n*s,i*a*a+r,0,0,0,0,1),this},makeScale:function(t,e,r){return this.set(t,0,0,0,0,e,0,0,0,0,r,0,0,0,0,1),this},compose:function(t,e,r){return this.makeRotationFromQuaternion(e),this.scale(r),this.setPosition(t),this},decompose:function(){var t,e;return function(r,n,i){void 0===t&&(t=new THREE.Vector3,e=new THREE.Matrix4);var s=this.elements,o=t.set(s[0],s[1],s[2]).length(),a=t.set(s[4],s[5],s[6]).length(),u=t.set(s[8],s[9],s[10]).length(),l=this.determinant();l<0&&(o=-o),r.x=s[12],r.y=s[13],r.z=s[14],e.elements.set(this.elements);var h=1/o,c=1/a,m=1/u;return e.elements[0]*=h,e.elements[1]*=h,e.elements[2]*=h,e.elements[4]*=c,e.elements[5]*=c,e.elements[6]*=c,e.elements[8]*=m,e.elements[9]*=m,e.elements[10]*=m,n.setFromRotationMatrix(e),i.x=o,i.y=a,i.z=u,this}}(),makeFrustum:function(t,e,r,n,i,s){var o=this.elements,a=2*i/(e-t),u=2*i/(n-r),l=(e+t)/(e-t),h=(n+r)/(n-r),c=-(s+i)/(s-i),m=-2*s*i/(s-i);return o[0]=a,o[4]=0,o[8]=l,o[12]=0,o[1]=0,o[5]=u,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=c,o[14]=m,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makePerspective:function(t,e,r,n){var i=r*Math.tan(THREE.Math.DEG2RAD*t*.5),s=-i,o=s*e,a=i*e;return this.makeFrustum(o,a,s,i,r,n)},makeOrthographic:function(t,e,r,n,i,s){var o=this.elements,a=1/(e-t),u=1/(r-n),l=1/(s-i),h=(e+t)*a,c=(r+n)*u,m=(s+i)*l;return o[0]=2*a,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*u,o[9]=0,o[13]=-c,o[2]=0,o[6]=0,o[10]=-2*l,o[14]=-m,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(t){for(var e=this.elements,r=t.elements,n=0;n<16;n++)if(e[n]!==r[n])return!1;return!0},fromArray:function(t){return this.elements.set(t),this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t[e+9]=r[9],t[e+10]=r[10],t[e+11]=r[11],t[e+12]=r[12],t[e+13]=r[13],t[e+14]=r[14],t[e+15]=r[15],t}};
THREE.Quaternion=function(t,i,s,h){this._x=t||0,this._y=i||0,this._z=s||0,this._w=void 0!==h?h:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get w(){return this._w},set w(t){this._w=t,this.onChangeCallback()},set:function(t,i,s,h){return this._x=t,this._y=i,this._z=s,this._w=h,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,i){if(t instanceof THREE.Euler==!1)throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var s=Math.cos(t._x/2),h=Math.cos(t._y/2),n=Math.cos(t._z/2),_=Math.sin(t._x/2),r=Math.sin(t._y/2),e=Math.sin(t._z/2),a=t.order;return"XYZ"===a?(this._x=_*h*n+s*r*e,this._y=s*r*n-_*h*e,this._z=s*h*e+_*r*n,this._w=s*h*n-_*r*e):"YXZ"===a?(this._x=_*h*n+s*r*e,this._y=s*r*n-_*h*e,this._z=s*h*e-_*r*n,this._w=s*h*n+_*r*e):"ZXY"===a?(this._x=_*h*n-s*r*e,this._y=s*r*n+_*h*e,this._z=s*h*e+_*r*n,this._w=s*h*n-_*r*e):"ZYX"===a?(this._x=_*h*n-s*r*e,this._y=s*r*n+_*h*e,this._z=s*h*e-_*r*n,this._w=s*h*n+_*r*e):"YZX"===a?(this._x=_*h*n+s*r*e,this._y=s*r*n+_*h*e,this._z=s*h*e-_*r*n,this._w=s*h*n-_*r*e):"XZY"===a&&(this._x=_*h*n-s*r*e,this._y=s*r*n-_*h*e,this._z=s*h*e+_*r*n,this._w=s*h*n+_*r*e),i!==!1&&this.onChangeCallback(),this},setFromAxisAngle:function(t,i){var s=i/2,h=Math.sin(s);return this._x=t.x*h,this._y=t.y*h,this._z=t.z*h,this._w=Math.cos(s),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var i,s=t.elements,h=s[0],n=s[4],_=s[8],r=s[1],e=s[5],a=s[9],o=s[2],u=s[6],c=s[10],l=h+e+c;return l>0?(i=.5/Math.sqrt(l+1),this._w=.25/i,this._x=(u-a)*i,this._y=(_-o)*i,this._z=(r-n)*i):h>e&&h>c?(i=2*Math.sqrt(1+h-e-c),this._w=(u-a)/i,this._x=.25*i,this._y=(n+r)/i,this._z=(_+o)/i):e>c?(i=2*Math.sqrt(1+e-h-c),this._w=(_-o)/i,this._x=(n+r)/i,this._y=.25*i,this._z=(a+u)/i):(i=2*Math.sqrt(1+c-h-e),this._w=(r-n)/i,this._x=(_+o)/i,this._y=(a+u)/i,this._z=.25*i),this.onChangeCallback(),this},setFromUnitVectors:function(){var t,i,s=1e-6;return function(h,n){return void 0===t&&(t=new THREE.Vector3),i=h.dot(n)+1,i<s?(i=0,Math.abs(h.x)>Math.abs(h.z)?t.set(-h.y,h.x,0):t.set(0,-h.z,h.y)):t.crossVectors(h,n),this._x=t.x,this._y=t.y,this._z=t.z,this._w=i,this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},multiply:function(t,i){return void 0!==i?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,i)):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,i){var s=t._x,h=t._y,n=t._z,_=t._w,r=i._x,e=i._y,a=i._z,o=i._w;return this._x=s*o+_*r+h*a-n*e,this._y=h*o+_*e+n*r-s*a,this._z=n*o+_*a+s*e-h*r,this._w=_*o-s*r-h*e-n*a,this.onChangeCallback(),this},slerp:function(t,i){if(0===i)return this;if(1===i)return this.copy(t);var s=this._x,h=this._y,n=this._z,_=this._w,r=_*t._w+s*t._x+h*t._y+n*t._z;if(r<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,r=-r):this.copy(t),r>=1)return this._w=_,this._x=s,this._y=h,this._z=n,this;var e=Math.sqrt(1-r*r);if(Math.abs(e)<.001)return this._w=.5*(_+this._w),this._x=.5*(s+this._x),this._y=.5*(h+this._y),this._z=.5*(n+this._z),this;var a=Math.atan2(e,r),o=Math.sin((1-i)*a)/e,u=Math.sin(i*a)/e;return this._w=_*o+this._w*u,this._x=s*o+this._x*u,this._y=h*o+this._y*u,this._z=n*o+this._z*u,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,i){return void 0===i&&(i=0),this._x=t[i],this._y=t[i+1],this._z=t[i+2],this._w=t[i+3],this.onChangeCallback(),this},toArray:function(t,i){return void 0===t&&(t=[]),void 0===i&&(i=0),t[i]=this._x,t[i+1]=this._y,t[i+2]=this._z,t[i+3]=this._w,t},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}},Object.assign(THREE.Quaternion,{slerp:function(t,i,s,h){return s.copy(t).slerp(i,h)},slerpFlat:function(t,i,s,h,n,_,r){var e=s[h+0],a=s[h+1],o=s[h+2],u=s[h+3],c=n[_+0],l=n[_+1],y=n[_+2],x=n[_+3];if(u!==x||e!==c||a!==l||o!==y){var z=1-r,w=e*c+a*l+o*y+u*x,f=w>=0?1:-1,b=1-w*w;if(b>Number.EPSILON){var C=Math.sqrt(b),g=Math.atan2(C,w*f);z=Math.sin(z*g)/C,r=Math.sin(r*g)/C}var M=r*f;if(e=e*z+c*M,a=a*z+l*M,o=o*z+y*M,u=u*z+x*M,z===1-r){var E=1/Math.sqrt(e*e+a*a+o*o+u*u);e*=E,a*=E,o*=E,u*=E}}t[i]=e,t[i+1]=a,t[i+2]=o,t[i+3]=u}});
THREE.Euler=function(t,i,h,n){this._x=t||0,this._y=i||0,this._z=h||0,this._order=n||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get order(){return this._order},set order(t){this._order=t,this.onChangeCallback()},set:function(t,i,h,n){return this._x=t,this._y=i,this._z=h,this._order=n||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,i,h){var n=THREE.Math.clamp,a=t.elements,s=a[0],r=a[4],e=a[8],o=a[1],_=a[5],c=a[9],u=a[2],l=a[6],M=a[10];return i=i||this._order,"XYZ"===i?(this._y=Math.asin(n(e,-1,1)),Math.abs(e)<.99999?(this._x=Math.atan2(-c,M),this._z=Math.atan2(-r,s)):(this._x=Math.atan2(l,_),this._z=0)):"YXZ"===i?(this._x=Math.asin(-n(c,-1,1)),Math.abs(c)<.99999?(this._y=Math.atan2(e,M),this._z=Math.atan2(o,_)):(this._y=Math.atan2(-u,s),this._z=0)):"ZXY"===i?(this._x=Math.asin(n(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(-u,M),this._z=Math.atan2(-r,_)):(this._y=0,this._z=Math.atan2(o,s))):"ZYX"===i?(this._y=Math.asin(-n(u,-1,1)),Math.abs(u)<.99999?(this._x=Math.atan2(l,M),this._z=Math.atan2(o,s)):(this._x=0,this._z=Math.atan2(-r,_))):"YZX"===i?(this._z=Math.asin(n(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(-c,_),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(e,M))):"XZY"===i?(this._z=Math.asin(-n(r,-1,1)),Math.abs(r)<.99999?(this._x=Math.atan2(l,_),this._y=Math.atan2(e,s)):(this._x=Math.atan2(-c,M),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+i),this._order=i,h!==!1&&this.onChangeCallback(),this},setFromQuaternion:function(){var t;return function(i,h,n){return void 0===t&&(t=new THREE.Matrix4),t.makeRotationFromQuaternion(i),this.setFromRotationMatrix(t,h,n)}}(),setFromVector3:function(t,i){return this.set(t.x,t.y,t.z,i||this._order)},reorder:function(){var t=new THREE.Quaternion;return function(i){return t.setFromEuler(this),this.setFromQuaternion(t,i)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(t,i){return void 0===t&&(t=[]),void 0===i&&(i=0),t[i]=this._x,t[i+1]=this._y,t[i+2]=this._z,t[i+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}};


/*!art-template - Template Engine | http://aui.github.com/artTemplate/*/
!function(){function a(a){return a.replace(t,"").replace(u,",").replace(v,"").replace(w,"").replace(x,"").split(y)}function b(a){return"'"+a.replace(/('|\\)/g,"\\$1").replace(/\r/g,"\\r").replace(/\n/g,"\\n")+"'"}function c(c,d){function e(a){return m+=a.split(/\n/).length-1,k&&(a=a.replace(/\s+/g," ").replace(/<!--[\w\W]*?-->/g,"")),a&&(a=s[1]+b(a)+s[2]+"\n"),a}function f(b){var c=m;if(j?b=j(b,d):g&&(b=b.replace(/\n/g,function(){return m++,"$line="+m+";"})),0===b.indexOf("=")){var e=l&&!/^=[=#]/.test(b);if(b=b.replace(/^=[=#]?|[\s;]*$/g,""),e){var f=b.replace(/\s*\([^\)]+\)/,"");n[f]||/^(include|print)$/.test(f)||(b="$escape("+b+")")}else b="$string("+b+")";b=s[1]+b+s[2]}return g&&(b="$line="+c+";"+b),r(a(b),function(a){if(a&&!p[a]){var b;b="print"===a?u:"include"===a?v:n[a]?"$utils."+a:o[a]?"$helpers."+a:"$data."+a,w+=a+"="+b+",",p[a]=!0}}),b+"\n"}var g=d.debug,h=d.openTag,i=d.closeTag,j=d.parser,k=d.compress,l=d.escape,m=1,p={$data:1,$filename:1,$utils:1,$helpers:1,$out:1,$line:1},q="".trim,s=q?["$out='';","$out+=",";","$out"]:["$out=[];","$out.push(",");","$out.join('')"],t=q?"$out+=text;return $out;":"$out.push(text);",u="function(){var text=''.concat.apply('',arguments);"+t+"}",v="function(filename,data){data=data||$data;var text=$utils.$include(filename,data,$filename);"+t+"}",w="'use strict';var $utils=this,$helpers=$utils.$helpers,"+(g?"$line=0,":""),x=s[0],y="return new String("+s[3]+");";r(c.split(h),function(a){a=a.split(i);var b=a[0],c=a[1];1===a.length?x+=e(b):(x+=f(b),c&&(x+=e(c)))});var z=w+x+y;g&&(z="try{"+z+"}catch(e){throw {filename:$filename,name:'Render Error',message:e.message,line:$line,source:"+b(c)+".split(/\\n/)[$line-1].replace(/^\\s+/,'')};}");try{var A=new Function("$data","$filename",z);return A.prototype=n,A}catch(B){throw B.temp="function anonymous($data,$filename) {"+z+"}",B}}var d=function(a,b){return"string"==typeof b?q(b,{filename:a}):g(a,b)};d.version="3.0.0",d.config=function(a,b){e[a]=b};var e=d.defaults={openTag:"<%",closeTag:"%>",escape:!0,cache:!0,compress:!1,parser:null},f=d.cache={};d.render=function(a,b){return q(a,b)};var g=d.renderFile=function(a,b){var c=d.get(a)||p({filename:a,name:"Render Error",message:"Template not found"});return b?c(b):c};d.get=function(a){var b;if(f[a])b=f[a];else if("object"==typeof document){var c=document.getElementById(a);if(c){var d=(c.value||c.innerHTML).replace(/^\s*|\s*$/g,"");b=q(d,{filename:a})}}return b};var h=function(a,b){return"string"!=typeof a&&(b=typeof a,"number"===b?a+="":a="function"===b?h(a.call(a)):""),a},i={"<":"&#60;",">":"&#62;",'"':"&#34;","'":"&#39;","&":"&#38;"},j=function(a){return i[a]},k=function(a){return h(a).replace(/&(?![\w#]+;)|[<>"']/g,j)},l=Array.isArray||function(a){return"[object Array]"==={}.toString.call(a)},m=function(a,b){var c,d;if(l(a))for(c=0,d=a.length;d>c;c++)b.call(a,a[c],c,a);else for(c in a)b.call(a,a[c],c)},n=d.utils={$helpers:{},$include:g,$string:h,$escape:k,$each:m};d.helper=function(a,b){o[a]=b};var o=d.helpers=n.$helpers;d.onerror=function(a){var b="Template Error\n\n";for(var c in a)b+="<"+c+">\n"+a[c]+"\n\n";"object"==typeof console&&console.error(b)};var p=function(a){return d.onerror(a),function(){return"{Template Error}"}},q=d.compile=function(a,b){function d(c){try{return new i(c,h)+""}catch(d){return b.debug?p(d)():(b.debug=!0,q(a,b)(c))}}b=b||{};for(var g in e)void 0===b[g]&&(b[g]=e[g]);var h=b.filename;try{var i=c(a,b)}catch(j){return j.filename=h||"anonymous",j.name="Syntax Error",p(j)}return d.prototype=i.prototype,d.toString=function(){return i.toString()},h&&b.cache&&(f[h]=d),d},r=n.$each,s="break,case,catch,continue,debugger,default,delete,do,else,false,finally,for,function,if,in,instanceof,new,null,return,switch,this,throw,true,try,typeof,var,void,while,with,abstract,boolean,byte,char,class,const,double,enum,export,extends,final,float,goto,implements,import,int,interface,long,native,package,private,protected,public,short,static,super,synchronized,throws,transient,volatile,arguments,let,yield,undefined",t=/\/\*[\w\W]*?\*\/|\/\/[^\n]*\n|\/\/[^\n]*$|"(?:[^"\\]|\\[\w\W])*"|'(?:[^'\\]|\\[\w\W])*'|\s*\.\s*[$\w\.]+/g,u=/[^\w$]+/g,v=new RegExp(["\\b"+s.replace(/,/g,"\\b|\\b")+"\\b"].join("|"),"g"),w=/^\d[^,]*|,\d[^,]*/g,x=/^,+|,+$/g,y=/^$|,+/;"function"==typeof define?define(function(){return d}):"undefined"!=typeof exports?module.exports=d:this.template=d}();
!function(global) {

  if (global.template) {
    global.template.config('openTag','<#');
    global.template.config('closeTag','#>');
  }

  global.snot = {};

  global.snot.util = {
    left_pos: left_pos,
    top_pos: top_pos,
    standardlization: standardlization,
    is_mobile: is_mobile,
    is_wechat_login: is_wechat_login,
    get_window_width: get_window_width,
    get_window_height: get_window_height,
    position_to_rotation: position_to_rotation,
    distance2D: distance2D,
    distance3D: distance3D,
    epsilon: epsilon,
    css_text_to_matrix: css_text_to_matrix,
    matrix_to_css_text: matrix_to_css_text,
    webgl_detect: webgl_detect,
    webgl_enabled: webgl_detect(),
    load_js: load_js,
    rotation_to_position: rotation_to_position,

    v_set_from_matrix_position: v_set_from_matrix_position,
    m_make_rotation_axis: m_make_rotation_axis,
    m_multiply: m_multiply,
    m_set_position: m_set_position,
    m_make_rotation_from_quaternion: m_make_rotation_from_quaternion,

    merge_json: merge_json,
    octree_collision: octree_collision,

  };

  function top_pos(elem) {
    var curtop = 0;
    if (elem.offsetParent) {
      do { 
          curtop += elem.offsetTop; 
      } while (elem = elem.offsetParent);
    }
    return curtop;
  };

  function left_pos(elem) {
    var curleft = 0;
    if (elem.offsetParent) {
        do { 
            curleft += elem.offsetLeft; 
        } while (elem = elem.offsetParent);
    }
    return curleft;
  };
  
  function is_mobile() {
    return get_window_width() < 500;
  }
  
  function is_wechat_login() {
    return window.navigator.userAgent.indexOf('MicroMessenger') >= 0 ? true : false;
  }
  
  function get_window_width() {
    return document.documentElement.clientWidth;
  }
  
  function get_window_height() {
    return document.documentElement.clientHeight;
  }
  
  function position_to_rotation(x, y, z) {
    var r = distance3D(x, y, z, 0, 0, 0);
    var rx = Math.asin(z / r);
    var ry = Math.asin(y / r / Math.cos(rx));
    if (x < 0) {
        ry = ry > 0 ? Math.PI - ry : - Math.PI - ry;
    }
  
    return {
      rx: - rx * 180 / Math.PI,
      ry: (ry < 0 ? ry + Math.PI * 2 : ry) * 180 / Math.PI
    };
  }
  
  function distance2D(a, b, c, d) {
    return Math.pow((a - c) * (a - c) + (b - d) * (b - d), 0.5);
  }
  
  function distance3D(a, b, c, d, e, f) {
    return Math.pow((a - d) * (a - d) + (b - e) * (b - e) + (c - f) * (c - f), 0.5);
  }
  
  function epsilon(value) {
    return Math.abs(value) < 0.000001 ? 0 : value.toFixed(5);
  };
  
  function css_text_to_matrix(t) {
    var m = new WebKitCSSMatrix(t);
    return [
      epsilon(m.m11), epsilon(m.m12), epsilon(m.m13), epsilon(m.m14),
      epsilon(m.m21), epsilon(m.m22), epsilon(m.m23), epsilon(m.m24),
      epsilon(m.m31), epsilon(m.m32), epsilon(m.m33), epsilon(m.m34),
      epsilon(m.m41), epsilon(m.m42), epsilon(m.m43), epsilon(m.m44)
    ];
  }
  
  function matrix_to_css_text(a, b, c, d,
                              e, f, g, h,
                              i, j, k, l,
                              m, n, o, p) {
      if (typeof(a) == 'object') {
          return 'matrix3d(' + (a.join(',')) + ')';
      }
      return 'matrix3d(' + a + ',' + b + ',' + c + ',' + d+',' + e + ',' + f + ',' + g + ',' + h + ',' + i + ',' + j + ',' + k + ',' + l + ',' + m + ',' + n + ',' + o+ ',' + p + ')';
  }
  
  window.requestAnimationFrame= (function () { 
    return window.requestAnimationFrame || 
    window.webkitRequestAnimationFrame || 
    window.mozRequestAnimationFrame || 
    window.oRequestAnimationFrame || 
    // if all else fails, use setTimeout 
    function (callback) { 
      return window.setTimeout(callback, 1000 / 60); // shoot for 60 fps 
    }; 
  })(); 
  
  function webgl_detect(return_context) {
    if (!!window.WebGLRenderingContext) {
      var canvas = document.createElement("canvas");
      var names = ['webgl', 'experimental-webgl', 'moz-webgl', 'webkit-3d'];
      var context = false;
  
      for (var i = 0;i < 4; i++) {
        try {
          context = canvas.getContext(names[i]);
          if (context && typeof context.getParameter == 'function') {
            // WebGL is enabled
            if (return_context) {
              // return WebGL object if the function's argument is present
              return {
                name: names[i],
                gl: context
              };
            }
            // else, return just true
            return true;
          }
        } catch(e) {}
      }
  
      // WebGL is supported, but disabled
      return false;
    }
  
    // WebGL not supported
    return false;
  }
  
  function load_js(file, callback) {
    var _doc = document.getElementsByTagName('head')[0];
    var js = document.createElement('script');
    js.setAttribute('type', 'text/javascript');
    js.setAttribute('src', file);
    _doc.appendChild(js);
    if (!/*@cc_on!@*/0) { //if not ie
      //firefox2、firefox3、safari3.1+、opera9.6+ support js.onload
      js.onload = function () {
        callback();
      }
    } else {
      //ie6、ie7 support js.onreadystatechange
      js.onReadyStateChange = function () {
        if (js.readyState == 'loaded' || js.readyState == 'complete') {
          callback();
        }
      }
    }
  }
  
  function rotation_to_position(z, rx, ry, rz) {
    z = - z;
    rx = - rx;
  
    var x = snot.bg_size / 2;
    var y = snot.bg_size / 2;
  
    var transform = css_text_to_matrix('translate3d(' + x + 'px,' + y + 'px,0) rotateY(' + (0) + 'deg) rotateX(' + (0) + 'deg) rotateY(' + (ry ? - ry : 0) + 'deg) rotateX(' + (rx ? - rx : 0) + 'deg) rotateZ(' + (rz ? rz : 0) +'deg) translateZ(' + z + 'px)' );
    return [ - transform[12] + snot.bg_size / 2, transform[13] - snot.bg_size / 2, - transform[14]];
  }

  function m_make_rotation_axis(point, rotation) {
    return new THREE.Matrix4().makeRotationAxis(point, rotation);
  }

  function m_multiply() {
    var mats = arguments;

    var l = mats.length;
    while (l > 1) {
      var last2 = mats[l - 2];
      var last1 = mats[l - 1];
      mats[l - 2] = new THREE.Matrix4().multiplyMatrices(
        last2,
        last1
      );
      l--;
    }
    return mats[0];
  }

  function v_set_from_matrix_position(mat4) {
    return new THREE.Vector3().setFromMatrixPosition(mat4);
  }

  function m_set_position(p) {
    return new THREE.Matrix4().setPosition(p);
  }

  function m_make_rotation_from_quaternion(q) {
    return new THREE.Matrix4().makeRotationFromQuaternion(q);
  }

  function merge_json(obj, json) {
    for (var i in json) {
      if (obj[i] == undefined) {
        obj[i] = json[i];
      }
    }
  }

  function standardlization(point, r) {
    r = r || 1;
    var distance_to_origin = distance3D(0, 0, 0, point.x, point.y, point.z);
    point.x *= r / distance_to_origin;
    point.y *= r / distance_to_origin;
    point.z *= r / distance_to_origin;
  }

  function is_point_inside(point, a, b) {
    if (point.x >= b.x && point.y >= b.y && point.z >= b.z &&
        point.x < a.x && point.y < a.y && point.z < a.z) {
      return true;
    }
    return false;
  }
  function get_inside_points(points, a, b) {
    let candidates = [];
    for (let i in points) {
      if (is_point_inside(points[i], a, b)) {
        candidates.push(points[i]);
      }
    }
    return candidates;
  }
  /*
   * see ../images/octree.png
   *
   * a.x > b.x
   * a.y > b.y
   * a.z > b.z
   */
  function octree_collision(a, b, points_a, points_b, res, depth = 1) {
    if (!points_a.length || !points_b.length) {
      return false;
    }
    if (depth > 7) {
      res.push({
        points_a: points_a,
        points_b: points_b,
      });
      return true;
    }

    // random split
    let half = {
      x: (a.x - b.x) / (Math.random() * 0.2 - 0.1 + 2),
      y: (a.y - b.y) / (Math.random() * 0.2 - 0.1 + 2),
      z: (a.z - b.z) / (Math.random() * 0.2 - 0.1 + 2),
    };
    let b_xyz = {
      x: b.x + half.x,
      y: b.y + half.y,
      z: b.z + half.z,
    };
    let b_x = {
      x: b_xyz.x,
      y: b.y,
      z: b.z,
    };
    let b_y = {
      x: b.x,
      y: b_xyz.y,
      z: b.z,
    };
    let b_z = {
      x: b.x,
      y: b.y,
      z: b_xyz.z,
    };
    let b_xz = {
      x: b_xyz.x,
      y: b.y,
      z: b_xyz.z,
    };
    let b_xy = {
      x: b_xyz.x,
      y: b_xyz.y,
      z: b.z,
    };
    let b_yz = {
      x: b.x,
      y: b_xyz.y,
      z: b_xyz.z,
    };

    let a_z = {
      x: a.x,
      y: a.y,
      z: a.z - half.z,
    };
    let a_x = {
      x: a.x - half.x,
      y: a.y,
      z: a.z,
    };
    let a_y = {
      x: a.x,
      y: a.y - half.y,
      z: a.z,
    };
    let a_xy = {
      x: a_x.x,
      y: a_y.y,
      z: a.z,
    };
    let a_yz = {
      x: a.x,
      y: a_y.y,
      z: a_z.z,
    };
    let a_xz = {
      x: a_x.x,
      y: a.y,
      z: a_z.z,
    };

    function sub_collision(a, b) {
      let candidates_a = get_inside_points(points_a, a, b);
      let candidates_b = get_inside_points(points_b, a, b);
      return octree_collision(a, b, candidates_a, candidates_b, res, depth + 1);
    }

    let pairs = [
      [a_x, b_yz],
      [a, b_xyz],
      [a_xy, b_z],
      [a_y, b_xz],

      [a_xz, b_y],
      [a_z, b_xy],
      [b_xyz, b],
      [a_yz, b_x],
    ];

    let found = false;
    for (let i in pairs) {
      if (sub_collision(pairs[i][0], pairs[i][1])) {
        found = true;
      }
    }

    return found;
  }

}(window);

!function(global) {

  var PI = Math.PI;
  var sin = Math.sin;
  var cos = Math.cos;
  var tan = Math.tan;
  var acos = Math.acos;
  var atan = Math.atan;
  var pow = Math.pow;
  var floor = Math.floor;
  var sqrt = Math.sqrt;

  var snot = {
    debug: false,
    container: document.getElementById('snot-container'),
    dom: document.getElementById('snot-wrap'),

    camera_look_at: {
      x: 0,
      y: 0,
      z: 1,
    },
    controls: {
      screen_orientation: 0,
      gyro_data: {
        alpha: 0,
        beta: 90 * PI / 180,
        gamma: 0
      },
    },
    mouse_sensitivity: 0.3,
    auto_rotation: 0,
    frames: 0,
    bg_rotation: [0, 0, 0, 0, 0, 0],

    pause_animation: false,


    bg_size: 1024,

    generator: {},
    gyro: false,
    ry: 0,        // Rotate * degree around y axis
    rx: 0,        // Rotate * degree around x axis
    dest_rx: 0,
    dest_ry: 0,
    dest_rz: 0,

    max_fov: 120, // Max field of view (degree)
    min_fov: 60,   // Min field of view (degree)
    fov: 90,      // Default field of view
    smooth: 0.17,
    min_detect_distance: 20,
    on_click: function() {},
    on_sprite_click: function() {},
  };
  var camera_dom = document.getElementById('snot-camera');
  var prev_gyro;

  var camera_base_transform;
  var previous_quat = new THREE.Quaternion();

  function _pointStandardlization(x, y, z) {
    var ratio = 200 / distance3D(x, y, z, 0, 0, 0);
    return [x * ratio, y * ratio, z * ratio];
  }

  if (global.snot) {
    for (var i in snot) {
      global.snot[i] = snot[i];
    }
    snot = global.snot;
  } else {
    console.error('snot-utils.js is missing');
    return;
  }
  var m_make_rotation_axis = snot.util.m_make_rotation_axis;
  var m_multiply = snot.util.m_multiply;
  var m_set_position = snot.util.m_set_position;
  var m_make_rotation_from_quaternion = snot.util.m_make_rotation_from_quaternion;
  var v_set_from_matrix_position = snot.util.v_set_from_matrix_position;

  var util = global.snot.util;
  var epsilon = util.epsilon;
  var distance3D = util.distance3D;
  var distance2D = util.distance2D;

  var set_fov = function (degree) {
    if (degree < snot.min_fov || degree > snot.max_fov) {
      return;
    }
    snot.fov = degree;
    snot.container.style['-webkit-transform'] = 'scale(' + tan(snot.max_fov / 2 * PI / 180) / tan(snot.fov / 2 * PI / 180) + ')';
  }

  function reset() {
    var sprites = document.getElementsByClassName('sprite');
    for (var i = 0; i < sprites.length; ++ i) {
      sprites[i].remove();
    }
  }

  var init = function(config) {
    reset();

    cancelAnimationFrame(snot._animateId);

    for (var i in config) {
      if (i == 'generator') {
        util.merge_json(snot.generator, config.generator);
      }
      snot[i] = config[i];
    }
    prev_gyro = snot.gyro;

    snot.dest_rx = snot.rx;
    snot.dest_ry = snot.ry;

    snot.width = snot.dom.offsetWidth;
    snot.height = snot.dom.offsetHeight;

    //compute the max Horizontal Field of view
    //perspective= projectiveScreenWidth/2
    //           = width/2/tan(max_fov/2)
    snot.perspective = snot.width / 2 / tan(snot.max_fov / 2 * PI / 180);

    snot.container.style['-webkit-perspective'] = snot.perspective + 'px';

    //camera offset
    // Z is depth(front) Y is height X is right
    //
    // translateZ setFOV
    // rotateX rotate around X axis
    // rotateY rotate around Y axis
    // translateX translate the Camera to center
    // translateY
    camera_base_transform = 'translateX(' + epsilon(- (snot.bg_size - snot.width) / 2) + 'px) translateY(' + epsilon(- (snot.bg_size - snot.height) / 2) + 'px)';
    camera_dom.style['-webkit-transform'] = 'translateZ(-' + snot.perspective + 'px) rotateY(' + epsilon(snot.rx) + 'deg) rotateX(' + epsilon(snot.ry) + 'deg)' + camera_base_transform;

    set_fov(snot.fov);

    if (config.bg_imgs) {
      load_bg_imgs(config.bg_imgs, config.bg_rotation || snot.bg_rotation);
    }

    if (config) {
      load_sprites(config.sprites);
    }

    if (util.is_mobile()) {
    }

    if (config.callback) {
      config.callback();
    }
    snot.init_controls();
    update();
  }

  function load_bg_imgs(bg_imgs, bg_rotation) {
    var bg_config = {
      front : 'rotateY(90deg)' + '                rotateZ(' + bg_rotation[0] + 'deg)  translateZ(-' + (snot.bg_size / 2) + 'px)',
      bottom: 'rotateY(90deg)' + 'rotateX(90deg)  rotateZ(' + bg_rotation[1] + 'deg)  translateZ(-' + (snot.bg_size / 2) + 'px) rotateZ(90deg)',
      left  : 'rotateY(90deg)' + 'rotateY(90deg)  rotateZ(' + bg_rotation[2] + 'deg)  translateZ(-' + (snot.bg_size / 2) + 'px)',
      back  : 'rotateY(90deg)' + 'rotateY(180deg) rotateZ(' + bg_rotation[3] + 'deg)  translateZ(-' + (snot.bg_size / 2) + 'px)',
      top   : 'rotateY(90deg)' + 'rotateX(-90deg) rotateZ(' + bg_rotation[4] + 'deg)  translateZ(-' + (snot.bg_size / 2) + 'px) rotateZ(-90deg)',
      right : 'rotateY(90deg)' + 'rotateY(-90deg) rotateZ(' + bg_rotation[5] + 'deg)  translateZ(-' + (snot.bg_size / 2) + 'px)'
    };

    var bg_dom;
    var count = 0;
    for (var i in bg_config) {
      bg_dom = document.getElementsByClassName('snot-bg ' + i)[0];
      bg_dom.style['-webkit-transform'] = bg_config[i];
      bg_dom.style['width'] = snot.bg_size + 2 + 'px';        // 2 more pixels for overlapping gaps ( chrome's bug )
      bg_dom.style['height'] = snot.bg_size + 2 + 'px';       // 2 more pixels for overlapping gaps ( chrome's bug )

      bg_dom.setAttribute('src', bg_imgs[count]);
      bg_dom.setAttribute('data-index', count);
      ++count;
    }
  }

  var load_sprites = function(sprites) {
    for (var i in sprites) {
      var t = sprites[i];
      if (t.standardlization) {
        var standard = _pointStandardlization(t.x,t.y,t.z);
        t.x=standard[0];
        t.y=standard[1];
        t.z=standard[2];
      }

      var temp_wrapper = document.createElement('div');
      temp_wrapper.innerHTML = template(snot.generator[t.generator], t);
      var element = temp_wrapper.firstChild;
      element.data = sprites[i];
      add_sprite_by_position(element, t);
    }
  }

  function add_sprite_by_position(element, p) {

    var x = - p.x;
    var z = - p.z;
    var y = - p.y;

    var spriteContainer = document.createElement('div');
    spriteContainer.style.display = 'inline-block';
    spriteContainer.style.position = 'absolute';
    spriteContainer.className = 'sprite-container';
    spriteContainer.id = element.data.id;

    spriteContainer.style['-webkit-transform-origin-x'] = '0';
    spriteContainer.style['-webkit-transform-origin-y'] = '0';

    var arc = x == 0 && z == 0 ? 0 : acos( z / pow(x * x + z * z, 0.5));

    arc = x < 0 ? 2 * PI - arc : arc;
    arc = arc * 180 / PI;

    var r = distance3D(x, y, z, 0, 0, 0);
    x += snot.bg_size / 2;
    y += snot.bg_size / 2;

    spriteContainer.style['-webkit-transform'] = 'translate3d(' + epsilon(x) + 'px,' + epsilon(y) + 'px,' + epsilon(z) + 'px) rotateY(' + epsilon(arc) + 'deg) rotateX(' + epsilon(- (y - snot.bg_size / 2) / r * 90)+'deg) rotateY(180deg)';

    var spriteWrap = document.createElement('div');
    spriteWrap.className='sprite-wrap';
    spriteWrap.appendChild(element);
    spriteWrap.setAttribute('data-visible', element.data.visible == false ? false : true);

    spriteContainer.appendChild(spriteWrap);
    camera_dom.appendChild(spriteContainer);
  }

  var update_sprite_visibility = function(id) {
    var visible = snot.sprites[id].visible;
    var spriteContainer = document.getElementById(id);
    spriteContainer.firstChild.setAttribute('data-visible', visible ? true : false);
  }

  var update_sprite_position = function(id) {
    var x = snot.sprites[id].x;
    var y = snot.sprites[id].y;
    var z = snot.sprites[id].z;
    z=-z;
    y=-y;
    var arc = x == 0 && z == 0 ? 0 : acos( z / pow(x * x + z * z, 0.5));

    arc = x < 0 ? 2 * PI - arc : arc;
    arc = arc * 180/ PI;

    var r = distance3D(x, y, z, 0, 0, 0);
    x += snot.bg_size / 2;
    y += snot.bg_size / 2;

    var spriteContainer = document.getElementById(id);

    spriteContainer.style['-webkit-transform'] = 'translate3d(' + epsilon(x) + 'px,' + epsilon(y) + 'px,' + epsilon(z) + 'px) rotateY(' + epsilon(arc) + 'deg) rotateX(' + epsilon(- (y - snot.bg_size / 2) / r * 90) + 'deg) rotateY(180deg)';
  }

  function run() {
    snot._animateId = requestAnimationFrame(run);
    if (!snot.pause_animation) {
      update();
    }
  }

  var camera_euler = new THREE.Euler();
  var target_quat = new THREE.Quaternion();
  var rotate_90_quat = new THREE.Quaternion(- sqrt( 0.5 ), 0, 0, sqrt( 0.5 ))
  var adjust_screen_quats = {
    0: new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 0, 1), 0),
    90: new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 0, 1), - 90),
    180: new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 0, 1), - 180),
    '-90': new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 0, 1), 90),
  };
  var look_at_euler = new THREE.Euler();

  function update_camera(x, y, z) {

    camera_euler.set(y, x, z, 'YXZ'); // 'ZXY' for the device, but 'YXZ' for us

    target_quat.setFromEuler(camera_euler); // orient the device

    target_quat.multiply(rotate_90_quat); // camera looks out the back of the device, not the top
                                          // - PI/2 around the x-axis
    target_quat.multiply(adjust_screen_quats[snot.controls.screen_orientation]); // adjust for screen orientation

    var slerp_quat = new THREE.Quaternion();
    THREE.Quaternion.slerp(target_quat, previous_quat, slerp_quat, 1 - snot.smooth);
    previous_quat = slerp_quat;
    var look_at_quat = slerp_quat.clone();
    look_at_quat.x *= -1;
    look_at_quat.z *= -1;
    var look_at_mat = m_make_rotation_from_quaternion(look_at_quat.normalize()).transpose();
    for (var i = 0; i < look_at_mat.elements.length; ++i) {
      look_at_mat.elements[i] = epsilon(look_at_mat.elements[i]);
    }
    var look_at_rot = look_at_euler.setFromRotationMatrix(look_at_mat, 'XZY');

    snot.rx = look_at_rot._x * 180 / PI;
    snot.ry = - look_at_rot._y * 180 / PI;
    snot.rz = look_at_rot._z * 180 / PI;

    snot.camera_look_at = v_set_from_matrix_position(m_multiply(
      m_make_rotation_axis({x: 0, y: 1, z: 0}, look_at_rot._y),
      m_make_rotation_axis({x: 0, y: 0, z: 1}, look_at_rot._z),
      m_make_rotation_axis({x: 1, y: 0, z: 0}, - look_at_rot._x),
      m_set_position({x: 0, y: 0, z: 1})
    )); // bad performance here

    camera_dom.style.transform = 'translateZ(' + epsilon(snot.perspective) + 'px)' + " matrix3d(" + look_at_mat.elements + ")"+ camera_base_transform;
  }

  function update() {
    snot.frames++;

    if (snot.gyro) {
      if (snot.controls.gyro_data.alpha === -1 && snot.controls.gyro_data.beta === -1 && snot.controls.gyro_data.gamma === - 1) {
        return;
      }

      update_camera(snot.controls.gyro_data.alpha, snot.controls.gyro_data.beta, - snot.controls.gyro_data.gamma);
    } else {
      if (prev_gyro) {
        snot.dest_rx = 0;
        snot.dest_ry = 0;
      }
      snot.dest_ry -= snot.auto_rotation;
      update_camera(- snot.dest_ry * PI / 180, snot.dest_rx * PI / 180 + PI/2, 0);
    }
    prev_gyro = snot.gyro;

    for (var i in snot.sprites) {
      var sprite = snot.sprites[i];
      if (sprite.need_update_position) {
        sprite.need_update_position = false;
        update_sprite_position(sprite.id);
      }
      if (sprite.need_update_visibility) {
        sprite.need_update_visibility = false;
        update_sprite_visibility(sprite.id);
      }
    }
    if (snot.debug) {
      document.getElementById('logger').innerHTML = 'rx:' + parseInt(snot.rx) + ' ' +
                        'ry:' + parseInt(snot.ry) + ' ' +
                        'rz:' + parseInt(snot.rz);
    }
  }


  var set_rx = function(rx, smooth) {
    //TODO
  }

  var set_ry=function(ry,smooth){
    //TODO
  }

  snot.controls.mouse_click = function(x, y) {
    var R = 100;
    var fov = snot.fov;
    var bg_size = snot.bg_size;
    var arcFactor = Math.PI / 180;
    var rz = snot.rz * arcFactor;
    var width = snot.width;
    var height = snot.height;

    var ry = (x / width - 0.5) * fov;
    var rx = (y / height-0.5) * fov * height / width;
    var r = cos(fov / 2 * arcFactor) * bg_size;
    var ratiox = (x - width / 2) / width * 2;
    var ratioy = (y - height / 2) / width * 2;
    var P = sin(fov / 2 * arcFactor) * bg_size;

    ry = atan(ratiox * P / r);
    rx = atan(ratioy * P / r);

    ry *= 180 / PI;
    rx *= 180 / PI;

    var xyz2 = util.rotation_to_position(R, rx, 0);

    var rr = distance3D(- tan(ry * arcFactor) * xyz2[2], - xyz2[1], xyz2[2], 0, 0, 0);
    var ratio = R / rr;

    var new_x = - tan(ry * PI / 180) * xyz2[2] * ratio;
    var new_y = - xyz2[1] * ratio;
    var new_z = xyz2[2] * ratio;

    var pos = v_set_from_matrix_position(m_multiply(
      m_make_rotation_axis({x: 0, y: 1, z: 0}, snot.ry * PI / 180),
      m_make_rotation_axis({x: 0, y: 0, z: 1}, - snot.rz * PI / 180),
      m_make_rotation_axis({x: 1, y: 0, z: 0}, - snot.rx * PI / 180),
      m_set_position({x: new_x, y: new_y, z: new_z})
    ));

    ax = pos.x;
    ay = pos.y;
    az = pos.z;

    var min_offset = 0.4;
    var min_distance = snot.min_detect_distance;
    var nearest;

    var spriteContainers = document.getElementsByClassName('sprite-container');
    for (var i = 0 ;i < spriteContainers.length; ++i) {
      var self = spriteContainers[i];
      var matrix = util.css_text_to_matrix(self.style.webkitTransform);
      var rate_ = 100 / distance3D(0, 0, 0, snot.bg_size / 2 - matrix[12], matrix[13] - snot.bg_size / 2, - matrix[14]);

      var distance = distance3D(ax, - ay, az, (snot.bg_size / 2 - matrix[12]) * rate_, rate_ * (matrix[13] - snot.bg_size / 2), rate_ * ( - matrix[14]));
      if (distance < min_distance) {
        min_distance = distance;
        nearest = self.children[0];
      }
    }

    var rotation = util.position_to_rotation(ax, az, ay);
    if (nearest) {
      snot.on_sprite_click(snot.sprites[nearest.parentElement.id], nearest);
    } else {
      snot.on_click({
        x: ax,
        y: ay,
        z: az,
      }, {
        rx: rotation[0],
        ry: rotation[1]
      });
    }
  }

  util.merge_json(snot, {
    set_fov: set_fov,
    set_rx: set_rx,
    set_ry: set_ry,
    init: init,
    run: run,
    update: update,
    load_sprites: load_sprites,
  });
}(window);

!function(global) {

  var dom_offset_top;
  var dom_offset_left;
  snot.init_controls = function() {

    dom_offset_left = util.left_pos(snot.dom);
    dom_offset_top = util.top_pos(snot.dom);
    snot.container.addEventListener('touchstart', mouse_down, false);
    snot.container.addEventListener('touchmove' , mouse_move, false);
    snot.container.addEventListener('touchend'  , mouse_up  , false);

    snot.container.addEventListener('mousedown' , mouse_down , false);
    snot.container.addEventListener('mousemove' , mouse_move , false);
    snot.container.addEventListener('mouseup'   , mouse_up   , false);
    snot.container.addEventListener('mousewheel', mouse_wheel, false);

    window.addEventListener('orientationchange', function(ev) {
      snot.controls.screen_orientation = window.orientation || 0;
    }, false);

    window.addEventListener('deviceorientation', function(ev) {
      if (ev.alpha !== null) {
        snot.controls.gyro_data.beta = ev.beta  * Math.PI / 180 ;
        snot.controls.gyro_data.gamma = ev.gamma  * Math.PI / 180;
        snot.controls.gyro_data.alpha = ev.alpha  * Math.PI / 180;
      } else {
        snot.controls.gyro_data.beta = snot.controls.gyro_data.gamma = snot.controls.gyro_data.alpha = -1;
      }
    }, true);
  }

  var util = snot.util;
  var distance3D = util.distance3D;
  var distance2D = util.distance2D;
  var floor = Math.floor;
  var cos = Math.cos;
  var sin = Math.sin;
  var atan = Math.atan;
  var tan = Math.tan;
  var PI = Math.PI;

  var m_make_rotation_axis = snot.util.m_make_rotation_axis;
  var m_multiply = snot.util.m_multiply;
  var m_set_position = snot.util.m_set_position;
  var m_make_rotation_from_quaternion = snot.util.m_make_rotation_from_quaternion;
  var v_set_from_matrix_position = snot.util.v_set_from_matrix_position;

  var touches = {
    fx: 0,   // First  finger x
    fy: 0,   // First  finger y
    sx: 0,   // Second finger x
    sy: 0    // Second finger y
  };

  var mouse_move = function(event) {

    event.preventDefault();
    event.stopPropagation();

    var x = Math.floor(event.clientX >= 0 ? event.clientX : event.touches[0].pageX);
    var y = Math.floor(event.clientY >= 0 ? event.clientY : event.touches[0].pageY);
    x -= dom_offset_left;
    y -= dom_offset_top;

    touches.click = false;

    if (!touches.is_touching) {
      return false;
    }

    if (event.touches && event.touches.length > 1) {

      var cfx = x;                          // Current frist  finger x
      var cfy = y;                          // Current first  finger y
      var csx = event.touches[1].pageX;     // Current second finger x
      var csy = event.touches[1].pageY;     // Current second finger y

      var dis = distance2D(touches.fx, touches.fy, touches.sx, touches.sy) - distance2D(cfx, cfy, csx, csy);

      var ratio = 0.12;
      snot.set_fov(snot.fov + dis * ratio);

      touches.fx = cfx;
      touches.fy = cfy;
      touches.sx = csx;
      touches.sy = csy;

      return false;
    }

    var ratio = snot.mouse_sensitivity;

    snot.dest_ry = snot.dest_ry + (touches.fx - x) * ratio;
    snot.dest_rx = snot.dest_rx - (touches.fy - y) * ratio;

    touches.fx = x;
    touches.fy = y;

    snot.dest_rx = snot.dest_rx > 90 ? 90 : snot.dest_rx;
    snot.dest_rx = snot.dest_rx < -90 ? -90 : snot.dest_rx;

  };

  var mouse_down = function (event) {

    event.preventDefault();
    event.stopPropagation();

    var x = floor(event.clientX >= 0 ? event.clientX : event.touches[0].clientX);
    var y = floor(event.clientY >= 0 ? event.clientY : event.touches[0].clientY);
    x -= dom_offset_left;
    y -= dom_offset_top;

    touches.mouse_down_x = x;
    touches.mouse_down_y = y;
    touches.fx = x;
    touches.fy = y;
    touches.click = true;

    if (event.touches && event.touches.length > 1) {

      touches.sx = event.touches[1].pageX;
      touches.sy = event.touches[1].pageY;

    }

    touches.is_touching = true;
  }

  var mouse_wheel = function (event) {

    event.preventDefault();
    event.stopPropagation();

    var offset = event.deltaY;
    snot.set_fov(snot.fov + offset * 0.06);

  }

  var mouse_up = function(event) {
    event.preventDefault();
    event.stopPropagation();

    var x = floor(event.clientX >= 0 ? event.clientX : event.changedTouches[0].pageX);
    var y = floor(event.clientY >= 0 ? event.clientY : event.changedTouches[0].pageY);
    x -= dom_offset_left;
    y -= dom_offset_top;

    //Screen coordinate to Sphere 3d coordinate
    if (distance2D(touches.mouse_down_x, touches.mouse_down_y, x, y) < 5) {
      snot.controls.mouse_click(x, y);
    }
    touches.is_touching = false;
  }

}(window);

//# sourceMappingURL=data:application/json;charset=utf8;base64,
